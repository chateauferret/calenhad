<?xml version="1.0" encoding="UTF-8"?>
<palette>

    <!-- Obligatory modules - behaviour is hardcoded in Calenhad - do not change -->

    <module role="modify" name="altitudemap" label="QuarticSpline map">
        <documentation>Map altitudes according to a spline, terrace or linear function</documentation>>
        <ports>
            <input index="0" mode="value" name="Input" label="in"/>
        </ports>
    </module>

    <module role="generate" name="raster" label="Equirectangular raster">
        <documentation>Single raster mapped to the whole globe by equirectangular projection</documentation>
        <range min="-1.0" max="1.0" />
    </module>

    <module role="generate" name="cuberaster" label="Raster cube map">
        <documentation>Set of six rasters each mapped to one face of a cube projected onto the globe</documentation>
        <range min="-1.0" max="1.0" />
    </module>

    <module role = "grid" name="cache" label="Cache">
        <documentation>Cache</documentation>
        <ports>
            <input index="0" mode="value" name="Input" label="in" required="true" />
        </ports>
        <glsl>
            grid (%gridIndex);
        </glsl>
    </module>

    <module role="generate" name="constant" label="Constant" render="false" height="0.25" width="0.75" showName="false">
        <documentation>Constant value</documentation>
        <parameters>
            <parameter type="double" name="value" default="1.0" display="edit">
                <documentation>Constant value</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>%value</glsl>
        <range min="%value" max="%value" />
    </module>

    <!-- Externally programmeable modules -->


    <module role="modify" name="normalise" label="Normalise">
        <documentation>Map input values to the given range</documentation>
        <ports>
            <input index="0" mode="value" name="Input" label="in"/>
        </ports>
        <parameters>
            <parameter type="double" name="targetMin" default="-1.0">
                <documentation>Value in target range corresponding to the minimum input value</documentation>
                <validator type="AcceptAny"/>
            </parameter>
            <parameter type="double" name="targetMax" default="1.0">
                <documentation>Value in target range corresponding to the maximum input value</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>

        <glsl>
            normalise (%0, %0.min, %0.max, %targetMin, %targetMax)
        </glsl>
        <range min="%targetMin" max="%targetMax" />
    </module>


    <module role="modify" name="abs" label="Absolute">
        <documentation>Absolute value</documentation>
        <ports>
            <input index="0" mode="value" name="Input" label="in"/>
        </ports>
        <glsl>abs (%0)</glsl>
        <range min="%0.min" max="%0.max" />
    </module>

    <module role="modify" name="invert" label="Invert">
        <documentation>Inverse value</documentation>
        <ports>
            <input index="0" mode="value" name="Input" label="in" required="true"/>
        </ports>
        <glsl>- %0</glsl>
        <range min="min (- %0.min, - %0.max)" max="max (- %0.min, - %0.max)" />
    </module>

    <module role="combine" name="add" label="Add">
        <documentation>Addition of two, three or four values</documentation>
        <ports>
            <input index="0" mode="value" name="Input 0" label="in0" default="0.0" />
            <input index="1" mode="value" name="Input 1" label="in1" default="0.0" />
            <input index="2" mode="value" name="Input 2" label="in2" default="0.0" />
            <input index="3" mode="value" name="Input 3" label="in3" default="0.0" />
        </ports>
        <glsl>%0 + %1 + %2 + %3</glsl>
        <range min="%0.min + %1.min + %2.min + %3.min" max="%0.max + %1.max + %2.max + %3.max" />
    </module>

    <module role="combine" name="max" label="Maximum">
        <documentation>Maximum of two, three or four values</documentation>
        <ports>
            <input index="0" mode="value" name="Input 0" label="in0" default="-1.0" />
            <input index="1" mode="value" name="Input 1" label="in1" default="-1.0" />
            <input index="2" mode="value" name="Input 2" label="in2" default="-1.0" />
            <input index="3" mode="value" name="Input 3" label="in3" default="-1.0" />
        </ports>
        <glsl>max (%0, max (%1, max (%2, %3)))</glsl>
        <range min = "min (%0.max, min (%1.max, min (%2,max, %3.max)))" max = "max (%0.max, max (%1.max, max (%2,max, %3.max)))" />
    </module>

    <module role="combine" name="min" label="Minimum">
        <documentation>Minimum of two, three or four values</documentation>
        <ports>
            <input index="0" mode="value" name="Input 0" label="in0" default="1.0" />
            <input index="1" mode="value" name="Input 1" label="in1" default="1.0" />
            <input index="2" mode="value" name="Input 2" label="in2" default="1.0" />
            <input index="3" mode="value" name="Input 3" label="in3" default="1.0" />
        </ports>
        <glsl>min (%0, min (%1, min (%2, %3)))</glsl>
        <range min = "min (%0.min, min (%1.min, min (%2,min, %3.min)))" max = "max (%0.min, max (%1.min, max (%2,min, %3.min)))" />
    </module>

    <module role="combine" name="multiply" label="Multiply">
        <documentation>Product of two, three or four values</documentation>
        <ports>
            <input index="0" mode="value" name="Input 0" label="in0" default="1.0" />
            <input index="1" mode="value" name="Input 1" label="in1" default="1.0" />
            <input index="2" mode="value" name="Input 2" label="in2" default="1.0" />
            <input index="3" mode="value" name="Input 3" label="in3" default="1.0" />
        </ports>
        <glsl>%0 * %1 * %2 * %3</glsl>
        <range min="%0.min * %1.min * %2.min * %3.min" max="%0.max * %1.max * %2.max * %3.max" />
    </module>

    <module role="combine" name="power" label="Power">
        <documentation>Raise base to the power of an exponent</documentation>
        <ports>
            <input index="0" mode="value" name="Base" label="base"/>
            <input index="1" mode="value" name="Exponent" default="2.0" label="exp"/>
        </ports>
        <glsl>pow (%0, %1)</glsl>
        <range min="pow (%0.min, %1.min)" max="pow (%0.max, %1.max)" />
    </module>

    <module role="combine" name="diff" label = "Difference">
        <documentation>Subtract a subtrahend from a minuend</documentation>
        <ports>
            <input index="0" mode="value" name="Minuend" label="min"/>
            <input index="1" mode="value" name="Subtrahend" label="sub"/>
        </ports>
        <glsl>%0 - %1</glsl>
        <range min="%0.min - %1.max" max="%0.max - %1.min" />
    </module>

    <module role="combine" name="blend" label="Blend">
        <documentation>Blend two inputs, weighting each according to the value of a control</documentation>
        <ports>
            <input index="0" mode="value" name="Input 1" label="in1" required="true" />
            <input index="1" mode="value" name="Input 2" label="in2" required="true" />
            <input index="2" mode="control" name="Control" label="ctrl" required="true" />
        </ports>
        <glsl>mix (%0, %1, %2)</glsl>
        <range min="min (%0.min, %1.min)" max="max (%0.max, %1.max)" />
    </module>

    <module role="transform" name="rotate" label="Rotate">
        <documentation>Rotate the input around a selected Euler pole</documentation>
        <ports>
            <input index="0" mode="value" name="Input" label="in" required="true" />
        </ports>
        <parameters>
            <parameter type="double" name="latitude" default="0">
                <documentation>Latitude of the pole of rotation</documentation>
                <validator type="AcceptRange" min="-90" max="90"/>
            </parameter>
            <parameter type="double" name="longitude" default="0">
                <documentation>Longitude of the pole of rotation</documentation>
                <validator type="AcceptRange" min="-180" max="90"/>
            </parameter>
            <parameter type="double" name="theta" default="45">
                <documentation>Angle of rotation _about pole of rotation</documentation>
                <validator type="AcceptRange" min="-180" max="180"/>
            </parameter>
        </parameters>
        <glsl>
            vec3 pole = toCartesian (vec2 (%longitude, %latitude));
            vec3 rc = rotate (radians (%theta), pole, c);
            ivec3 fuv = cartesianToIndex (rc);
            vec2 rg = toGeolocation (rc);
            return $0 (fuv, rc, rg);
        </glsl>
        <range min="%0.min" max="%0.max" />
    </module>

    <module role="generate" name="distance" label="Distance">
        <documentation>Distance from a given point. At the point, value = 1, and value declines with increasing distance to -1 at distance = %range.</documentation>
        <parameters>
            <parameter type="double" name="latitude" default="0">
                <documentation>Latitude of the pole of rotation</documentation>
                <validator type="AcceptRange" min="-90" max="90"/>
            </parameter>
            <parameter type="double" name="longitude" default="0">
                <documentation>Longitude of the pole of rotation</documentation>
                <validator type="AcceptRange" min="-180" max="90"/>
            </parameter>
            <parameter type="double" name="range" default="0.5">
                <documentation>Distance from the given point at which value = -1</documentation>
                <validator type="AcceptRange" min="0.0" max="2.0"/>
            </parameter>
        </parameters>
        <glsl>distance (g, vec2 (%longitude, %latitude), %range)</glsl>
    </module>


    <module role="generate" name="cylinders" label="Cylinders">
        <documentation>Cylinder function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0" label="freq">
                <documentation>Frequency of the cylinder function (radius of one cylinder)</documentation>
            </input>
        </ports>
        <glsl>cylinders (c, %0)</glsl>
    </module>

    <module role="generate" name="spheres" label="Spheres">
        <documentation>Sphere function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0"  label="freq">
                <documentation>Frequency of the sphere function (radius of one sphere)</documentation>
            </input>
        </ports>
        <glsl>spheres (c, %0)</glsl>
    </module>

    <module role="combine" name="clamp" label="Clamp">
        <documentation>Clamp the value between minimum and maximum values</documentation>
        <ports>
            <input index="0" mode="value" name="Input" label="in" />
            <input index="1" mode="control" name="minimum" default="-1.0"  label="min" />
            <input index="2" mode="control" name="maximum" default="1.0"  label="max" />
        </ports>
        <glsl>clamp (%0, %1, %2)</glsl>
        <range min="max (%0.min, %1.min)" max="min (%0.max, %2.max)" />
    </module>

    <module role="generate" name="latitude" label="Latitude">
        <documentation>The latitude of the location, mapped to the range -1 &lt; value &lt; 1</documentation>
        <glsl>g.y / (M_PI / 2.0)</glsl>
    </module>

    <module role="generate" name="longitude" label="Longitude">
        <documentation>The longitude of the location, mapped to the range -1 &lt; value &lt; 1</documentation>
        <glsl>g.x / M_PI</glsl>
    </module>

    <module role="modify" name="blur" label="Block blur">
        <documentation>For now a simple block blur filter</documentation>
        <ports>
            <input index="0" mode="value" name="input" required="true" label="in">
                <documentation>Input value</documentation>
            </input>
        </ports>
        <parameters>

        </parameters>
        <glsl>
            float acc = 0.0;
            ivec3 [3] [3] surr = surrounding (pos);
            for (int i = 0; i &lt; 3; i++) {
                for (int j = 0; j &lt; 3; j++) {
                    ivec3 p = surr [i] [j];
                    vec3 c = indexToCartesian (p);
                    vec2 g = toGeolocation (c);
                    acc += $0 (p, c, g);
                }
            }
            return acc / 9.0;
        </glsl>
        <range min="%0.min" max="%0.max" />
    </module>


    <module role="generate" name="perlin" label="Perlin noise">
        <documentation>Perlin noise function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0"  label="freq">
                <documentation>Frequency of the noise function (radius of one cylinder)</documentation>
            </input>
            <input index="1" mode="value"  name="lacunarity" default="2.0"  label="lac" >
                <documentation>Lacunarity of the noise function</documentation>
            </input>
            <input index="2" mode="value" name="persistence" default="0.5"  label="pers" >
                <documentation>Persistence of the noise function: reduction of amplitude between octaves</documentation>
            </input>
        </ports>
        <parameters>
            <parameter type="integer" name="octaves" default="4">
                <documentation>Number of octaves applied of the noise function</documentation>
                <validator type="AcceptRange" min="1" max="30"/>
            </parameter>
            <parameter type="integer" name="seed" default="0">
                <documentation>Random seed</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>perlin (c, %0, %1, %2, %octaves, %seed)</glsl>
    </module>


    <module role="generate" name="simplex" label="Simplex noise">
        <documentation>Simplex noise function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0"  label="freq" >
                <documentation>Frequency of the noise function (radius of one cylinder)</documentation>
            </input>
            <input index="1" mode="value"  name="lacunarity" default="2.0"  label="lac" >
                <documentation>Lacunarity of the noise function</documentation>
            </input>
            <input index="2" mode="value" name="persistence" default="0.5"  label="pers" >
                <documentation>Persistence of the noise function: reduction of amplitude between octaves</documentation>
            </input>
        </ports>
        <parameters>
            <parameter type="integer" name="octaves" default="4">
                <documentation>Number of octaves applied of the noise function</documentation>
                <validator type="AcceptRange" min="1" max="30"/>
            </parameter>
            <parameter type="integer" name="seed" default="0">
                <documentation>Random seed</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>simplex (c, %0, %1, %2, %octaves, %seed)</glsl>
    </module>

    <module role="generate" name="billow" label="Billow noise">
        <documentation>Perlin noise function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0"  label="freq" >
                <documentation>Frequency of the noise function (radius of one cylinder)</documentation>
            </input>
            <input index="1" mode="value"  name="lacunarity" default="2.0" label="lac" >
                <documentation>Lacunarity of the noise function</documentation>
            </input>
            <input index="2" mode="value" name="persistence" default="0.5"  label="pers" >
                <documentation>Persistence of the noise function: reduction of amplitude between octaves</documentation>
            </input>
        </ports>
        <parameters>
            <parameter type="integer" name="octaves" default="4">
                <documentation>Number of octaves applied of the noise function</documentation>
                <validator type="AcceptRange" min="1" max="30"/>
            </parameter>
            <parameter type="integer" name="seed" default="0">
                <documentation>Random seed</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>billow (c, %0, %1, %2, %octaves, %seed)</glsl>
    </module>

    <module role="generate" name="ridgedmultifractal" label="Ridged multifractal">
        <documentation>Ridged noise function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0"  label="freq" >
                <documentation>Frequency of the noise function (radius of one cylinder)</documentation>
            </input>
            <input index="1" mode="value"  name="lacunarity" default="2.0"  label="lac" >
                <documentation>Lacunarity of the noise function</documentation>
            </input>
        </ports>
        <parameters>
            <parameter type="integer" name="octaves" default="4">
                <documentation>Number of octaves applied of the noise function</documentation>
                <validator type="AcceptRange" min="1" max="30"/>
            </parameter>
            <parameter type="integer" name="seed" default="0">
                <documentation>Random seed</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>ridgedmulti (c, %0, %1, %octaves, %seed, 1.0, 1.0, 2.0, 2.0)</glsl>
    </module>


    <module role="combine" name="scaleandbias" label="Scale and bias">
        <documentation>Scale and bias the input to alter its range</documentation>
        <ports>
            <input index="0" mode="value" name="Input"  label="in"  required="true" />
            <input index="1" mode="control" name="scale" default="1.0"  label="scale" />
            <input index="2" mode="control" name="bias" default="0.0"  label="bias" />
        </ports>
        <glsl>%0 * %1 + %2</glsl>
        <range min="min (%0.min * %1.min + %2.min, min (%0.min * %1.max + %2.min, %0.min * %1.min + %2.max))"
               max="max (%0.max * %1.min + %2.min, max (%0.max * %1.max + %2.min, %0.max * %1.min + %2.max))" />
    </module>

    <module role="combine" name="select" label="Select">
        <documentation>Select one or the other input based on control relative to threshold</documentation>
        <ports>
            <input index="0" mode="value" name="Input 1"  label="in1"  required="true" />
            <input index="1" mode="value" name="Input 2" label="in2"  required="true" />
            <input index="2" mode="control" name="Control"  label="ctrl"  required="true" />
        </ports>
        <parameters>
            <parameter type="double" name="lowerBound" default="-1.0">
                <documentation>Lower bound of the selection range</documentation>
                <validator type="AcceptAny" />
            </parameter>
            <parameter type="double" name="upperBound" default="1.0">
                <documentation>Upper bound of the selection range</documentation>
                <validator type="AcceptAny" />
            </parameter>
            <parameter type="double" name="falloff" default="0.1">
                <documentation>Width of the edge falloff range</documentation>
                <validator type="AcceptAny" />
            </parameter>
        </parameters>
        <glsl>select (%0, %1, %2, %lowerBound, %upperBound, %falloff)</glsl>
        <range min="min (%0.min, %1.min)" max="max (%0.max, %1.max)" />
    </module>
    <!--
    <module role="transform"  label="Turbulence">
        <documentation>Turbulence function</documentation>
        <ports>
            <input index="0" mode="value" name="input"  label="in" required="true" />
            <input index="1" mode="value" name="frequency" default="1.0" label="freq"  >
                <documentation>Frequency of the turbulence function</documentation>
            </input>
            <input index="2" mode="value"  name="power" default="2.0" label="pow" >
                <documentation>Power of the turbulence function</documentation>
            </input>
            <input index="3" mode="value" name="roughness" default="1.0"  label="rough" >
                <documentation>Roughness of the turbulence</documentation>
            </input>
        </ports>
        <parameters>
            <parameter type="integer" name="octaves" default="4">
                <documentation>Number of octaves applied of the noise function</documentation>
                <validator type="AcceptRange" min="1" max="30"/>
            </parameter>
            <parameter type="integer" name="seed" default="0">
                <documentation>Random seed</documentation>
                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>$0 (turbulence (c, %1, %2, %3, %seed))</glsl>
    </module>
    -->
    <module role="generate" name="voronoi" label="Voronoi noise">
        <documentation>Voronoi noise function</documentation>
        <ports>
            <input index="0" mode="value" name="frequency" default="1.0"  label="freq" >
                <documentation>Frequency of the voronoi function</documentation>
            </input>
            <input index="1" mode="value"  name="displacement" default="0.2" label="disp" >
                <documentation>Displacement of the voronoi function</documentation>
            </input>
        </ports>
        <parameters>
            <parameter type="double" name="scale" default="1.0">
                <documentation>Scaling multiplier applied to the distance function. Positive values produce mountains, negative values produce troughs.</documentation>
                <validator type="AcceptAny"/>
            </parameter>
            <parameter type="integer" name="seed" default="0">
                <documentation>Random seed</documentation>z\a                <validator type="AcceptAny"/>
            </parameter>
        </parameters>
        <glsl>voronoi (pos, %0, %1, %scale, %seed)</glsl>

    </module>

</palette>
